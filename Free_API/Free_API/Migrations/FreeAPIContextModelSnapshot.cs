// <auto-generated />
using System;
using Free_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FreeAPI.Migrations
{
    [DbContext(typeof(FreeAPIContext))]
    partial class FreeAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AllergenDish", b =>
                {
                    b.Property<int>("allergensId")
                        .HasColumnType("int");

                    b.Property<int>("dishesId")
                        .HasColumnType("int");

                    b.HasKey("allergensId", "dishesId");

                    b.HasIndex("dishesId");

                    b.ToTable("AllergenDish", (string)null);
                });

            modelBuilder.Entity("Free_API.Models.DAO.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Allergens", (string)null);
                });

            modelBuilder.Entity("Free_API.Models.DAO.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Free_API.Models.DAO.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Dishes", (string)null);
                });

            modelBuilder.Entity("Free_API.Models.DAO.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("AllergenDish", b =>
                {
                    b.HasOne("Free_API.Models.DAO.Allergen", null)
                        .WithMany()
                        .HasForeignKey("allergensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Free_API.Models.DAO.Dish", null)
                        .WithMany()
                        .HasForeignKey("dishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Free_API.Models.DAO.Category", b =>
                {
                    b.HasOne("Free_API.Models.DAO.Menu", null)
                        .WithMany("categories")
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("Free_API.Models.DAO.Dish", b =>
                {
                    b.HasOne("Free_API.Models.DAO.Category", null)
                        .WithMany("dishes")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Free_API.Models.DAO.Category", b =>
                {
                    b.Navigation("dishes");
                });

            modelBuilder.Entity("Free_API.Models.DAO.Menu", b =>
                {
                    b.Navigation("categories");
                });
#pragma warning restore 612, 618
        }
    }
}
